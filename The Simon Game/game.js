/* This uses jQuery */

// Constant
let buttonColors = ["red", "blue", "green", "yellow"]; // All possible button colors
let gamePattern = []; // Stores sequence generated by the game
let userClickedPattern = []; // Stores the sequence of user's clicked
let gameStarted = false; // Track if game has started
let level = 0; // Track current level

// 1. The game started with keypress. So detect any keypress
$(document).keypress(function() {
	if (!gameStarted) {
		// Change the h1 text to display current level
		$("h1").text("Level " + level);
		// Execute nextSequence()
		nextSequence();
		// Modify game start status
		gameStarted = true;
	}
});

// 2. Next sequence
function nextSequence() {
	// Reset the game sequence, increase level, and change h1 to show current level
	userClickedPattern = [];
	level++;
	$("h1").text("Level " + level);

	// Generate random color and push into gamePattern array
	let randomNumber = Math.floor(Math.random() * 4);
	let randomChosenColor = buttonColors[randomNumber];
	gamePattern.push(randomChosenColor);

	// Start the sequence animation and sound for each in gamePattern
	for (let i=0; i < gamePattern.length; i++) {
			setTimeout(function() {
				$("#" + gamePattern[i]).fadeOut(100).fadeIn(100);
				playSound(gamePattern[i]);
			}, i * 600);
		}
}

// 3. User button click
$(".btn").click(function() {
	// Determine the color that the user clicked and push into userClickedPatter array
	let userChosenColor = $(this).attr("id");
	userClickedPattern.push(userChosenColor);
	// Also animate and play sound
	animatePress(userChosenColor);
	playSound(userChosenColor);

	// Check user answer
	checkAnswer(userClickedPattern.length - 1)
})

// 4. Create all these functions

// Check user answer
function checkAnswer(currentSequence) {
	// Compare between user clicks and the game sequence. Check by their last pattern. This happen after every user clicked.
	if (gamePattern[currentSequence] == userClickedPattern[currentSequence]) {
		// If user clicked to the end of game pattern
		if (userClickedPattern.length == gamePattern.length) {
			setTimeout(function() {
				nextSequence();
			}, 1000);
		}
	}
		// If user clicked wrong
		else {
			playSound("wrong");
			// This is make background red color
			$("body").addClass("game-over");
			$("h1").text("Game Over, Press Any Key to Restart");
			setTimeout(function() {
				$("body").removeClass("game-over");
			}, 200);

			// Start over
			startOver();
		}
}

// Animate when clicked
function animatePress(currentColor) {
	// Add "pressed" class
	$("#" + currentColor).addClass("pressed");
	// Remove the class after period of time
	setTimeout(function() {
		$("#" + currentColor).removeClass("pressed");
	}, 100);
}

// Play sound when clicked
function playSound(name) {
	let audio = new Audio("./sounds/" + name + ".mp3");
	audio.play();
}

// Start over
function startOver() {
	level = 0;
	gamePattern = [];
	gameStarted = false;
}